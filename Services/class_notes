Services:
---------
    - Services in angular js used to write the common business logic.

    - by using services we can reuse the business logic.

    - we have two types of services.

        1. predefined services

        2. custom services


custom services
---------------
    - the services developed by user based on application requirement called as
custom services.

    - in angular js , we can create the custom services in 5 ways.

        1. factory()

        2. service()

        3. value()

        4. constant()

        5. provider()

creating the custom service by using factory()
----------------------------------------------
function class_one(){
    this.fun_one = function(){
        return "Data From DataBase Soon...!";
    }
}

app.factory("my_service", function(){
    return new class_one().fun_one();
});

app.controller("ctrl_one" , function($scope,my_service){
    $scope.var_one = my_service;
});

app.controller("ctrl_two" , function($scope,my_service){
    $scope.var_two = my_service;
});


creating the custom service by using service()
----------------------------------------------
app.service("my_service",function(){
    this.fun_one = function(){
        return "For Controller One...!";
    }
    this.fun_two = function(){
        return "For Controller Two...!"
    }
});

app.controller("ctrl_one",function($scope,my_service){
    $scope.var_one = my_service.fun_one();
});

app.controller("ctrl_two",function($scope,my_service){
    $scope.var_two = my_service.fun_two();
});

creating the custom service by using value()
--------------------------------------------
    - we can create the custom services in the form of a "key&value" pairs by using
value()
Ex.
    app.value("my_service","root_one");
    app.value("my_service","root_two");

    app.controller("ctrl_one",function($scope,my_service){
        $scope.var_one = my_service;
    });

    app.controller("ctrl_two",function($scope,my_service){
            $scope.var_two = my_service;
    });

creating the custom service by using constant()
--------------------------------------------
    - we can create the custom services in the form of a "key&value" pairs by using
constant()
Ex.
    app.constant("my_service","root_one");
    app.constant("my_service","root_two");

    app.controller("ctrl_one",function($scope,my_service){
        $scope.var_one = my_service;
    });

    app.controller("ctrl_two",function($scope,my_service){
            $scope.var_two = my_service;
    });


creating the custom service by using provider()
-----------------------------------------------
app.provider("my_service",function(){
    this.var_one = "root_one";
    this.$get = function(){
        return this.var_one;
    }
});

app.config(function(my_serviceProvider){
    my_serviceProvider.var_one = "root_two";
});


Predefined Services:
--------------------
    - the services given by framework called as predefined services.

1. $http

    - this service used to connect to servers by using http protocol.

    Ex.
        Tomcat
        Weblogic
        WAS
        JBOSS
        IIS
        Apache
        NodejS
        --
        --
        --













