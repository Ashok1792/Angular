Introduction:
-------------
    What is Angular ??

    Why Angular ??


 JavaScript:
 -----------

    Functions

        - Named Functions

        - Anonymous Functions


    Classes

    Closures

    Promises

Automation Tools:
-----------------
    bower

    Gulp

Angular Applications

    1. Static Application

    2. Dynamic Application


Directives

Services

Single Page Applications

NodeJS Integration








What is Angular ??
------------------
    - AngularJS is a client side javascript framework.

    - AngularJS Follows MVC Design Pattern.

        M - Model

        V - View

        C - Controller



Why AngularJS ??
----------------
    - AngularJS Reduces the Burden on the Server.

    - We are missing the Secuirity by using AngularJS because we are implementing
      business components at client side.


JavaScript:
-----------
    - JavaScript is the Scripting Language.
    - We can make HTML Pages as Dynamic Interactive web pages.
    - by using <script></script> we can include javascript to HTML Pages.

variables:
---------
    - Variables in javascript used to store the data.

    - we can declare the variables by using "var" keyword.

    - we can store any type of data by using javascript variables.

    Ex.
        var data = "data from database....!";

        var data = 100;

        var data = true;

        var data = new employee();

        var data = {'key1':'Hello_1'};

    - we can display the data on browser console by using
          console.log("Welcome....!");

    - we can display the data on web page by using
        document.write("Welcome....!");


Functions:
----------
    - set of statements called as function.

    - functions are used to write the business logic.

    - by using functions we can reuse the business logic.

    - we have two types of functions

        1. Named functions

        2. anonymous functions

Named functions
---------------
    - the functions with the name called as Named functions.

Syntax.
-------
    function function_name(){
        //Logic
    }

    function_name();

Anonymous functions:
--------------------
    - the functions without name called as anonymous functions.

Syntax.
        var fun_one = function(){
            //logic
        }

        fun_one()

JSON
----
    - JSON Stands for Java Script Object Notation.

    - JSON used to transfer the data over the network.

    - JSON is ligth weigth compared to XML.

Syntax.
    Objects - {}

    Arrays  - []

    data    - "key&value"


classes:
--------
    - collection of variables and functions called as class.

    - we can create the classes by using "function" keyword.

    - in class(function) "all members" should start with this keyword.

    - we can create the objects by using "new" keyword.


Automation tools:
----------------

1. bower:
---------
    - bower is the automation tool used to maintain the dependencies to
develop ui application.

    - bower based on node js.

installation of bower:
----------------------
> npm install -g bower
     Automatically "bower@1.8.2" version will be installed.


bower component:
----------------
 - "bower.json" file called as bower component.

bower.json
----------
{
    "name":"sreenutech",
    "dependencies":{
        "angular":"latest",
        "bootstrap":"latest"
    }
}
> bower install
[Note : automatically dependencies downloads to "bower_components" folder]


Angular Applications:
--------------------
    - as a angular developer we can develop two types of applications.

    1. static application

    2. dynamic application


static application
------------------
    - if view won't interacts with controller for dynamic data then such type
of application called as static application.

steps to create the static angular application:
-----------------------------------------------

1) download angular framework

2) load angular framework

3) develop application by using following predefined directives.

    1. ng-app

    2. ng-model

    3. ng-bind


Dynamic Application:

    - if view interacts with controller for dynamic data then such type of
application called as Dynamic Application.


Step 1:
-------
    download angular framework.


Step 2:
-------
    load angular framework.


Step 3:
-------
    declare the logical name of web application by using ng-app directive

    Ex.
        ng-app="app"


Step 4:
-------
    declare the controller by using "ng-controller" directive.

Ex.
    <div ng-controller="ctrl">

    </div>


Step 5:
-------
    create the app instance.

    <script>
            var app = angular.module("app",[]);
    </script>


[Note : "app" object used to implement the controllers , services , single page applications
        and filters,....]



Step 6:
    implement the controller.

Declaring the variables in controller:
--------------------------------------

    we can declare the variables by using either $scope (or) $rootScope service.

Ex.
    $scope.var_one = "Welcome...!";

Declaring the functions in controller:
--------------------------------------
Ex.
    $scope.my_fun = function(){
        return "Welcome...!";
    }

Declaring the JSON Objects in Controller:
-----------------------------------------
Ex.
    $scope.obj = {"key1":"Hello_1"};


Directives:
-----------
    - directives in angular js enhances the html capabilities.

1. ng-app

    - angular framework starts the execution from ng-app directive.

    - this directive called as root directive.

    - ng-app directive takes the logical name of web application.

    - logical name of web application is optional for static applications.

    - logical name of web application mandatory for dynamic applications.

    - we can have only one "ng-app" directive per web application.

    - executing the angular application forcefully without ng-app directive
      called as "manual bootstrap".



MongoDB:
--------
    - MongoDB Supports JSON Objects.

    - MongoDB Follows client server Architecture.

    - MongoDB is ligth weigth compared to other databases.

MongoDB Queries:
----------------
Start the Server:
> mongod

[Note : by default mongo server run on "27017" port no with "mongodb" protocol ]

connect to server
-----------------
> mongo

create and switch to database:
------------------------------
> use workshop;

create the collection in database:
----------------------------------
> db.createCollection("products");

insert the JSON Data:
---------------------
> db.products.insert({'p_id':111,'p_name':'p_one','p_cost':10000});

Query the Collection:
---------------------
> db.products.find();























































































































